[
    {
        "id": "931c8c08566051b9",
        "type": "tab",
        "label": "HTTP Request",
        "disabled": false,
        "info": ""
    },
    {
        "id": "2a7bdd3b552fc77e",
        "type": "group",
        "z": "931c8c08566051b9",
        "name": "",
        "style": {
            "stroke": "#ff0000",
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "d73ac54cfb4c224e",
            "44dbfb0dc96c20e7"
        ],
        "x": 94,
        "y": 39,
        "w": 272,
        "h": 82
    },
    {
        "id": "f12a0134dfa8836f",
        "type": "group",
        "z": "931c8c08566051b9",
        "name": "HTTP Request",
        "style": {
            "label": true,
            "stroke": "#0070c0",
            "fill": "#bfdbef",
            "color": "#000000"
        },
        "nodes": [
            "37ab07594e20ac15",
            "75d94d76b69a66ca",
            "96d2007d3a52e2f4",
            "249908231dc83472",
            "527dfd4b1e0c8261",
            "326edbadf91bad39",
            "4f350b1cf46b5bf7",
            "549795838bc3d9ad",
            "a9bdd90ad92e2c5c",
            "222a53af2487bd54",
            "9557d3b40fb3feae",
            "9d0514435428a7f8",
            "9604b80e09c0f70a",
            "3d6726507b86c67d",
            "eec8bd5e19a72b73",
            "ccb49111a0f06c0d",
            "63db498536ee2abb",
            "0455fc2212522d10",
            "a92f009ee8312585",
            "2d915c79cd1510d0"
        ],
        "x": 94,
        "y": 159,
        "w": 952,
        "h": 402
    },
    {
        "id": "ae113ed54bd3e490",
        "type": "group",
        "z": "931c8c08566051b9",
        "name": "/!\\ BOUCLE DELETE INSTANCE",
        "style": {
            "stroke": "#ff0000",
            "fill": "#dbcbe7",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "54ecf896ded1a32a",
            "ea95df73f33a2d21",
            "5fa837f4777d78e0",
            "00a555fc4393be72",
            "f04b5b88233f5f77",
            "36085f021f705b02"
        ],
        "x": 34,
        "y": 639,
        "w": 1092,
        "h": 122
    },
    {
        "id": "605bdb6ba681f503",
        "type": "group",
        "z": "931c8c08566051b9",
        "name": "/!\\ BOUCLE DELETE INSTANCE",
        "style": {
            "stroke": "#ff0000",
            "fill": "#dbcbe7",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "9b3a5d8cbb408720",
            "a2e1f17b3c44934a",
            "190d28df12110aa1",
            "e6460863503ed76f",
            "28ad09ba363d4d7b",
            "f3489bc81634b710"
        ],
        "x": 34,
        "y": 779,
        "w": 1092,
        "h": 122
    },
    {
        "id": "d73ac54cfb4c224e",
        "type": "function",
        "z": "931c8c08566051b9",
        "g": "2a7bdd3b552fc77e",
        "name": "TO MODIFY",
        "func": "//////////////////////////////////////////////////\n////////////    TO MODIFY      ///////////////////\n//////////////////////////////////////////////////\n\n// Variable to Modify \nconst ip = \"192.168.1.139\";             // Controler IP Address\n\nconst login = \"admin\";              //Apex distech login\nconst password = \"univ-lorawan\"     //Apex distech password\n\n/////////////////////////////////////////////////\n/////////////   DO NOT MODIFY ///////////////////\n/////////////////////////////////////////////////\n\n//Autentification key\nlet key = login + \":\" + password;\n//let bufferkey = new Buffer(key);\nlet bufferkey = Buffer.from(key)\nconst keybase64 = bufferkey.toString('base64');\nconst autentikey = \"Basic \"+keybase64;\n\n// Store variable\nglobal.set('g_ip', ip);\nglobal.set('g_akey', autentikey);\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 80,
        "wires": [
            []
        ],
        "icon": "node-red/cog.svg"
    },
    {
        "id": "44dbfb0dc96c20e7",
        "type": "inject",
        "z": "931c8c08566051b9",
        "g": "2a7bdd3b552fc77e",
        "name": "trigger auto",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 155,
        "y": 80,
        "wires": [
            [
                "d73ac54cfb4c224e"
            ]
        ],
        "l": false
    },
    {
        "id": "37ab07594e20ac15",
        "type": "inject",
        "z": "931c8c08566051b9",
        "g": "f12a0134dfa8836f",
        "name": "Send Request",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 210,
        "y": 200,
        "wires": [
            [
                "75d94d76b69a66ca"
            ]
        ]
    },
    {
        "id": "75d94d76b69a66ca",
        "type": "function",
        "z": "931c8c08566051b9",
        "g": "f12a0134dfa8836f",
        "name": "GET all BACnet object",
        "func": "// This resource lists all of the current objects on the device.\n\nvar request = {\n    \"method\": \"GET\",\n    \"url\": \"https://\" + global.get('g_ip') + \"/api/rest/v2/services/bacnet/local/objects\",\n    \"headers\": {Authorization: global.get('g_akey')}\n};\n\nreturn request;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 200,
        "wires": [
            [
                "96d2007d3a52e2f4"
            ]
        ]
    },
    {
        "id": "96d2007d3a52e2f4",
        "type": "http request",
        "z": "931c8c08566051b9",
        "g": "f12a0134dfa8836f",
        "name": "HTTP REQUEST",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "0a54777a4b254e96",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 730,
        "y": 200,
        "wires": [
            [
                "249908231dc83472"
            ]
        ]
    },
    {
        "id": "249908231dc83472",
        "type": "debug",
        "z": "931c8c08566051b9",
        "g": "f12a0134dfa8836f",
        "name": "Debug HTTP",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 200,
        "wires": []
    },
    {
        "id": "527dfd4b1e0c8261",
        "type": "inject",
        "z": "931c8c08566051b9",
        "g": "f12a0134dfa8836f",
        "name": "Send Instance",
        "props": [
            {
                "p": "instance",
                "v": "5",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 210,
        "y": 280,
        "wires": [
            [
                "9d0514435428a7f8"
            ]
        ]
    },
    {
        "id": "326edbadf91bad39",
        "type": "inject",
        "z": "931c8c08566051b9",
        "g": "f12a0134dfa8836f",
        "name": "Send Instance & Data",
        "props": [
            {
                "p": "instance",
                "v": "5",
                "vt": "str"
            },
            {
                "p": "data",
                "v": "20",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 240,
        "y": 360,
        "wires": [
            [
                "9557d3b40fb3feae"
            ]
        ]
    },
    {
        "id": "4f350b1cf46b5bf7",
        "type": "inject",
        "z": "931c8c08566051b9",
        "g": "f12a0134dfa8836f",
        "name": "Send Instance & Name",
        "props": [
            {
                "p": "instance",
                "v": "5",
                "vt": "num"
            },
            {
                "p": "name",
                "v": "Analog Value 5",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 240,
        "y": 440,
        "wires": [
            [
                "222a53af2487bd54"
            ]
        ]
    },
    {
        "id": "549795838bc3d9ad",
        "type": "inject",
        "z": "931c8c08566051b9",
        "g": "f12a0134dfa8836f",
        "name": "Send Instance",
        "props": [
            {
                "p": "instance",
                "v": "5",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 210,
        "y": 520,
        "wires": [
            [
                "a9bdd90ad92e2c5c"
            ]
        ]
    },
    {
        "id": "a9bdd90ad92e2c5c",
        "type": "function",
        "z": "931c8c08566051b9",
        "g": "f12a0134dfa8836f",
        "name": "DELETE object",
        "func": "// This request deletes an existing Analog Value objet with the specified instance.\n\nvar request = {\n    \"method\": \"DELETE\",\n    \"url\": \"https://\" + global.get('g_ip') + \"/api/rest/v2/services/bacnet/local/objects/analog-values/\" + msg.instance,\n    \"headers\": {Authorization: global.get('g_akey')}\n};\n\nreturn request;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 520,
        "wires": [
            [
                "ccb49111a0f06c0d"
            ]
        ]
    },
    {
        "id": "222a53af2487bd54",
        "type": "function",
        "z": "931c8c08566051b9",
        "g": "f12a0134dfa8836f",
        "name": "POST Create object",
        "func": "// This request creates a new Analog Value objet with the specified name and instance.\n\nvar request = {\n    \"method\": \"POST\",\n    \"url\": \"https://\" + global.get('g_ip') + \"/api/rest/v2/services/bacnet/local/objects/add\",\n    \"headers\": {Authorization: global.get('g_akey'),\n                ContentType: \"application/json\"},\n    \"payload\": {\n        \"object-type\": \"AnalogValue\",\n        \"instance-number\": msg.instance,\n        \"name\": msg.name\n    }\n};\n\nreturn request;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 440,
        "wires": [
            [
                "eec8bd5e19a72b73"
            ]
        ]
    },
    {
        "id": "9557d3b40fb3feae",
        "type": "function",
        "z": "931c8c08566051b9",
        "g": "f12a0134dfa8836f",
        "name": "POST present value",
        "func": "// This request writes a new present value in the specified Analog Value instance.\n\n\nvar request = {\n    \"method\": \"POST\",\n    \"url\": \"https://\" + global.get('g_ip') + \"/api/rest/v2/services/bacnet/local/objects/analog-values/\" + msg.instance,\n    \"headers\": {Authorization: global.get('g_akey'),\n                ContentType: \"application/json\"},\n    \"payload\": {\"present-value\": msg.data}\n};\n\nreturn request;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 360,
        "wires": [
            [
                "3d6726507b86c67d"
            ]
        ]
    },
    {
        "id": "9d0514435428a7f8",
        "type": "function",
        "z": "931c8c08566051b9",
        "g": "f12a0134dfa8836f",
        "name": "GET present value",
        "func": "// This resource gets the present value of the specified Analog Value instance.\n\nvar request = {\n    \"method\": \"GET\",\n    \"url\": \"https://\" + global.get('g_ip') + \"/api/rest/v2/services/bacnet/local/objects/analog-values/\" + msg.instance + \"/present-value\",\n    \"headers\": { Authorization: global.get('g_akey') }\n};\n\nreturn request;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 280,
        "wires": [
            [
                "9604b80e09c0f70a"
            ]
        ]
    },
    {
        "id": "9604b80e09c0f70a",
        "type": "http request",
        "z": "931c8c08566051b9",
        "g": "f12a0134dfa8836f",
        "name": "HTTP REQUEST",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "0a54777a4b254e96",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 730,
        "y": 280,
        "wires": [
            [
                "2d915c79cd1510d0"
            ]
        ]
    },
    {
        "id": "3d6726507b86c67d",
        "type": "http request",
        "z": "931c8c08566051b9",
        "g": "f12a0134dfa8836f",
        "name": "HTTP REQUEST",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "0a54777a4b254e96",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 730,
        "y": 360,
        "wires": [
            [
                "a92f009ee8312585"
            ]
        ]
    },
    {
        "id": "eec8bd5e19a72b73",
        "type": "http request",
        "z": "931c8c08566051b9",
        "g": "f12a0134dfa8836f",
        "name": "HTTP REQUEST",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "0a54777a4b254e96",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 730,
        "y": 440,
        "wires": [
            [
                "0455fc2212522d10"
            ]
        ]
    },
    {
        "id": "ccb49111a0f06c0d",
        "type": "http request",
        "z": "931c8c08566051b9",
        "g": "f12a0134dfa8836f",
        "name": "HTTP REQUEST",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "0a54777a4b254e96",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 730,
        "y": 520,
        "wires": [
            [
                "63db498536ee2abb"
            ]
        ]
    },
    {
        "id": "63db498536ee2abb",
        "type": "debug",
        "z": "931c8c08566051b9",
        "g": "f12a0134dfa8836f",
        "name": "Debug HTTP",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 520,
        "wires": []
    },
    {
        "id": "0455fc2212522d10",
        "type": "debug",
        "z": "931c8c08566051b9",
        "g": "f12a0134dfa8836f",
        "name": "Debug HTTP",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 440,
        "wires": []
    },
    {
        "id": "a92f009ee8312585",
        "type": "debug",
        "z": "931c8c08566051b9",
        "g": "f12a0134dfa8836f",
        "name": "Debug HTTP",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 360,
        "wires": []
    },
    {
        "id": "2d915c79cd1510d0",
        "type": "debug",
        "z": "931c8c08566051b9",
        "g": "f12a0134dfa8836f",
        "name": "Debug HTTP",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 280,
        "wires": []
    },
    {
        "id": "54ecf896ded1a32a",
        "type": "function",
        "z": "931c8c08566051b9",
        "g": "ae113ed54bd3e490",
        "name": "DELETE Analog Value objects",
        "func": "// This request deletes an existing Analog Value objet with the specified instance.\n\nvar request = {\n    \"method\": \"DELETE\",\n    \"url\": \"https://192.168.1.139/api/rest/v2/services/bacnet/local/objects/analog-values/\" + global.get('g_instance'),\n    \"headers\": {Authorization: global.get('g_akey')}\n};\n\n\nvar i = global.get('g_instance');\ni = i+1;\nglobal.set('g_instance', i);\n\nreturn request;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 680,
        "wires": [
            [
                "5fa837f4777d78e0"
            ]
        ]
    },
    {
        "id": "ea95df73f33a2d21",
        "type": "inject",
        "z": "931c8c08566051b9",
        "g": "ae113ed54bd3e490",
        "name": "Start",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 130,
        "y": 680,
        "wires": [
            [
                "36085f021f705b02"
            ]
        ]
    },
    {
        "id": "5fa837f4777d78e0",
        "type": "http request",
        "z": "931c8c08566051b9",
        "g": "ae113ed54bd3e490",
        "name": "HTTP REQUEST",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "0a54777a4b254e96",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 790,
        "y": 680,
        "wires": [
            [
                "f04b5b88233f5f77",
                "00a555fc4393be72"
            ]
        ]
    },
    {
        "id": "00a555fc4393be72",
        "type": "debug",
        "z": "931c8c08566051b9",
        "g": "ae113ed54bd3e490",
        "name": "Debug HTTP",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 680,
        "wires": []
    },
    {
        "id": "172f593478a16a33",
        "type": "comment",
        "z": "931c8c08566051b9",
        "name": "WARNING /!\\ This flow will delete all Objects on your controler !!!!!",
        "info": "",
        "x": 590,
        "y": 620,
        "wires": [],
        "icon": "node-red/alert.svg"
    },
    {
        "id": "f04b5b88233f5f77",
        "type": "delay",
        "z": "931c8c08566051b9",
        "g": "ae113ed54bd3e490",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 510,
        "y": 720,
        "wires": [
            [
                "54ecf896ded1a32a"
            ]
        ]
    },
    {
        "id": "9b3a5d8cbb408720",
        "type": "function",
        "z": "931c8c08566051b9",
        "g": "605bdb6ba681f503",
        "name": "DELETE Binary Values objects",
        "func": "// This request deletes an existing Analog Value objet with the specified instance.\n\nvar request = {\n    \"method\": \"DELETE\",\n    \"url\": \"https://192.168.1.139/api/rest/v2/services/bacnet/local/objects/binary-values/\" + global.get('g_instance'),\n    \"headers\": {Authorization: global.get('g_akey')}\n};\n\n\nvar i = global.get('g_instance');\ni = i+1;\nglobal.set('g_instance', i);\n\nreturn request;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 820,
        "wires": [
            [
                "190d28df12110aa1"
            ]
        ]
    },
    {
        "id": "a2e1f17b3c44934a",
        "type": "inject",
        "z": "931c8c08566051b9",
        "g": "605bdb6ba681f503",
        "name": "Start",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 130,
        "y": 820,
        "wires": [
            [
                "f3489bc81634b710"
            ]
        ]
    },
    {
        "id": "190d28df12110aa1",
        "type": "http request",
        "z": "931c8c08566051b9",
        "g": "605bdb6ba681f503",
        "name": "HTTP REQUEST",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "0a54777a4b254e96",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 750,
        "y": 820,
        "wires": [
            [
                "e6460863503ed76f",
                "28ad09ba363d4d7b"
            ]
        ]
    },
    {
        "id": "e6460863503ed76f",
        "type": "debug",
        "z": "931c8c08566051b9",
        "g": "605bdb6ba681f503",
        "name": "Debug HTTP",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 820,
        "wires": []
    },
    {
        "id": "28ad09ba363d4d7b",
        "type": "delay",
        "z": "931c8c08566051b9",
        "g": "605bdb6ba681f503",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 490,
        "y": 860,
        "wires": [
            [
                "9b3a5d8cbb408720"
            ]
        ]
    },
    {
        "id": "36085f021f705b02",
        "type": "function",
        "z": "931c8c08566051b9",
        "g": "ae113ed54bd3e490",
        "name": "Reset",
        "func": "global.set('g_instance', 0 );\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 680,
        "wires": [
            [
                "54ecf896ded1a32a"
            ]
        ]
    },
    {
        "id": "f3489bc81634b710",
        "type": "function",
        "z": "931c8c08566051b9",
        "g": "605bdb6ba681f503",
        "name": "Reset",
        "func": "global.set('g_instance', 0 );\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 820,
        "wires": [
            [
                "9b3a5d8cbb408720"
            ]
        ]
    },
    {
        "id": "0a54777a4b254e96",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false,
        "alpnprotocol": ""
    }
]